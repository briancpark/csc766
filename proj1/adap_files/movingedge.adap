(FileAst "movingedge.adap" Begin)
(ImportFile "movingedge.adap.h")
(VarAst nbr_5 (DataType array (ArrayType array (DataType int 0 ) 5 ) 0 ))
(Comment location "global var nbr_5 in movingedge.c at line 2")
(VarAst magic (DataType int 0 ))
(Comment location "global var magic in movingedge.c at line 3")
(Comment initialization "35 ")
(VarAst V (DataType array (ArrayType array (DataType int 0 ) 100 ) 0 ))
(Comment location "global var V in movingedge.c at line 4")
(VarAst init_nbr (DataType function (FuncType function (DataType void 0 )) 0 ))
(Comment location "global var init_nbr in movingedge.c at line 6")
(FuncAst init_nbr AUTO (FuncType init_nbr (DataType void 0 )) Begin )
(CodeBlock fbody Begin)(CodeBlock level1 Begin)
(AssignStat = (ArrayAcc . (VarAccAst nbr_5)(ConstAst 0 ))(ConstAst -3 ))
(AssignStat = (ArrayAcc . (VarAccAst nbr_5)(ConstAst 1 ))(ConstAst 12 ))
(AssignStat = (ArrayAcc . (VarAccAst nbr_5)(ConstAst 2 ))(ConstAst 17 ))
(AssignStat = (ArrayAcc . (VarAccAst nbr_5)(ConstAst 3 ))(ConstAst 12 ))
(AssignStat = (ArrayAcc . (VarAccAst nbr_5)(ConstAst 4 ))(ConstAst -3 ))
(CodeBlock level1 End)
(LabelStat L1)
(CodeBlock fbody End)
(FuncAst init_nbr End)
(VarAst getinput (DataType function (FuncType function (DataType int 0 )) 0 ))
(Comment location "global var getinput in movingedge.c at line 14")
(FuncAst getinput AUTO (FuncType getinput (DataType int 0 )) Begin )
(CodeBlock fbody Begin)(CodeBlock level1 Begin)
(VarAst a (DataType int 0 ))
(AssignStat = (VarAccAst a)(ConstAst -1 ))
(GotoStat L4)
(LabelStat L3)
(CodeBlock level2 Begin)
(ExprStat FuncCall (VarAccAst scanf)(ConstAst "%d")(UopAcc & (VarAccAst a)))
(GotoStat L9 (ExprAst > (ConstAst 0 )(VarAccAst a)))
(GotoStat L7 (ExprAst <= (VarAccAst a)(ConstAst 100 )))
(LabelStat L9)
(CodeBlock level3 Begin)
(ExprStat FuncCall (VarAccAst printf)(ConstAst "I need a non-negative number less than 100: "))
(AssignStat = (VarAccAst a)(ConstAst -1 ))
(CodeBlock level3 End)
(LabelStat L7)
(CodeBlock level2 End)
(LabelStat L4)
(GotoStat L3 (ExprAst > (ConstAst 0 )(VarAccAst a)))
(ReturnStat return (VarAccAst a))
(CodeBlock level1 End)
(LabelStat L2)
(CodeBlock fbody End)
(FuncAst getinput End)
(VarAst moving (DataType function (FuncType function (DataType void 0 )(VarAst p0 (DataType int 0 ))) 0 ))
(Comment location "global var moving in movingedge.c at line 31")
(FuncAst moving AUTO (FuncType moving (DataType void 0 )(VarAst size (DataType int 0 ))) Begin )
(CodeBlock fbody Begin)(CodeBlock level1 Begin)
(VarAst j (DataType int 0 ))
(VarAst i (DataType int 0 ))
(AssignStat = (VarAccAst size)(VarAccAst size))
(AssignStat = (VarAccAst i)(ConstAst 2 ))
(GotoStat L15)
(LabelStat L12)
(CodeBlock level2 Begin)
(VarAst temp (DataType int 0 ))
(AssignStat = (VarAccAst temp)(ConstAst 0 ))
(AssignStat = (VarAccAst j)(ConstAst -2 ))
(LabelStat L16)
(CodeBlock level3 Begin)
(AssignStat = (VarAccAst temp)(ExprAst + (VarAccAst temp)(ExprAst * (ArrayAcc . (VarAccAst V)(ExprAst * (ConstAst 1 )(ExprAst + (VarAccAst i)(VarAccAst j))))(ArrayAcc . (VarAccAst nbr_5)(ExprAst + (ExprAst * (ConstAst 1 )(VarAccAst j))(ConstAst 2 ))))))
(CodeBlock level3 End)
(LabelStat L17)
(AssignStat = (VarAccAst j)(ExprAst + (VarAccAst j)(ConstAst 1 )))
(GotoStat L16 (ExprAst < (VarAccAst j)(ConstAst 3 )))
(AssignStat = (ArrayAcc . (VarAccAst V)(ExprAst * (ConstAst 1 )(VarAccAst i)))(ExprAst / (VarAccAst temp)(VarAccAst magic)))
(CodeBlock level2 End)
(LabelStat L13)
(AssignStat = (VarAccAst i)(ExprAst + (VarAccAst i)(ConstAst 1 )))
(LabelStat L15)
(GotoStat L12 (ExprAst < (VarAccAst i)(ExprAst - (VarAccAst size)(ConstAst 2 ))))
(CodeBlock level1 End)
(LabelStat L11)
(CodeBlock fbody End)
(FuncAst moving End)
(VarAst main (DataType function (FuncType function (DataType int 0 )) 0 ))
(Comment location "global var main in movingedge.c at line 42")
(FuncAst main AUTO (FuncType main (DataType int 0 )) Begin )
(CodeBlock fbody Begin)(CodeBlock level1 Begin)
(VarAst i (DataType int 0 ))
(VarAst size (DataType int 0 ))
(VarAst redat1 (DataType int 0 ))
(ExprStat FuncCall (VarAccAst printf)(ConstAst "Please input the size of the vector to be transformed: "))
(AssignStat = (VarAccAst redat1)(ExprAst FuncCall (VarAccAst getinput)))
(AssignStat = (VarAccAst size)(VarAccAst redat1))
(AssignStat = (VarAccAst i)(ConstAst 0 ))
(GotoStat L25)
(LabelStat L22)
(CodeBlock level2 Begin)
(VarAst redat2 (DataType int 0 ))
(AssignStat = (VarAccAst redat2)(ExprAst FuncCall (VarAccAst rand)))
(AssignStat = (ArrayAcc . (VarAccAst V)(ExprAst * (ConstAst 1 )(VarAccAst i)))(ExprAst % (VarAccAst redat2)(ConstAst 100 )))
(CodeBlock level2 End)
(LabelStat L23)
(AssignStat = (VarAccAst i)(ExprAst + (VarAccAst i)(ConstAst 1 )))
(LabelStat L25)
(GotoStat L22 (ExprAst < (VarAccAst i)(VarAccAst size)))
(ExprStat FuncCall (VarAccAst printf)(ConstAst "Original vector:\n"))
(AssignStat = (VarAccAst i)(ConstAst 0 ))
(GotoStat L30)
(LabelStat L27)
(ExprStat FuncCall (VarAccAst printf)(ConstAst "%d\n")(ArrayAcc . (VarAccAst V)(ExprAst * (ConstAst 1 )(VarAccAst i))))
(LabelStat L28)
(AssignStat = (VarAccAst i)(ExprAst + (VarAccAst i)(ConstAst 1 )))
(LabelStat L30)
(GotoStat L27 (ExprAst < (VarAccAst i)(VarAccAst size)))
(ExprStat FuncCall (VarAccAst printf)(ConstAst "\n"))
(ExprStat FuncCall (VarAccAst init_nbr))
(ExprStat FuncCall (VarAccAst moving)(VarAccAst size))
(ExprStat FuncCall (VarAccAst printf)(ConstAst "Moving edge vector:\n"))
(AssignStat = (VarAccAst i)(ConstAst 0 ))
(GotoStat L37)
(LabelStat L34)
(ExprStat FuncCall (VarAccAst printf)(ConstAst "%d\n")(ArrayAcc . (VarAccAst V)(ExprAst * (ConstAst 1 )(VarAccAst i))))
(LabelStat L35)
(AssignStat = (VarAccAst i)(ExprAst + (VarAccAst i)(ConstAst 1 )))
(LabelStat L37)
(GotoStat L34 (ExprAst < (VarAccAst i)(VarAccAst size)))
(ExprStat FuncCall (VarAccAst printf)(ConstAst "\n"))
(CodeBlock level1 End)
(ReturnStat return (ConstAst 0 ))
(LabelStat L20)
(CodeBlock fbody End)
(FuncAst main End)
(FileAst "movingedge.adap" End)

