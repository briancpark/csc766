(FileAst "tax.adap" Begin)
(ImportFile "tax.adap.h")
(VarAst getinput (DataType function (FuncType function (DataType int 0 )) 0 ))
(Comment location "global var getinput in tax.c at line 10")
(FuncAst getinput AUTO (FuncType getinput (DataType int 0 )) Begin )
(CodeBlock fbody Begin)(CodeBlock level1 Begin)
(VarAst inp (DataType int 0 ))
(AssignStat = (VarAccAst inp)(ConstAst -1 ))
(GotoStat L3)
(LabelStat L2)
(CodeBlock level2 Begin)
(ExprStat FuncCall (VarAccAst scanf)(ConstAst "%d")(UopAcc & (VarAccAst inp)))
(GotoStat L6 (ExprAst <= (ConstAst 0 )(VarAccAst inp)))
(CodeBlock level3 Begin)
(ExprStat FuncCall (VarAccAst printf)(ConstAst "I need a non-negative number: "))
(CodeBlock level3 End)
(LabelStat L6)
(CodeBlock level2 End)
(LabelStat L3)
(GotoStat L2 (ExprAst > (ConstAst 0 )(VarAccAst inp)))
(ReturnStat return (VarAccAst inp))
(CodeBlock level1 End)
(LabelStat L1)
(CodeBlock fbody End)
(FuncAst getinput End)
(VarAst main (DataType function (FuncType function (DataType int 0 )) 0 ))
(Comment location "global var main in tax.c at line 26")
(FuncAst main AUTO (FuncType main (DataType int 0 )) Begin )
(CodeBlock fbody Begin)(CodeBlock level1 Begin)
(VarAst line10 (DataType int 0 ))
(VarAst line8 (DataType int 0 ))
(VarAst line7 (DataType int 0 ))
(VarAst line6 (DataType int 0 ))
(VarAst deadline12 (DataType int 0 ))
(VarAst e (DataType int 0 ))
(VarAst d (DataType int 0 ))
(VarAst line4 (DataType int 0 ))
(VarAst deadline11 (DataType int 0 ))
(VarAst dependant (DataType int 0 ))
(VarAst single (DataType int 0 ))
(VarAst b (DataType int 0 ))
(VarAst line1 (DataType int 0 ))
(VarAst line2 (DataType int 0 ))
(VarAst line3 (DataType int 0 ))
(VarAst line5 (DataType int 0 ))
(VarAst eic (DataType int 0 ))
(VarAst c (DataType int 0 ))
(VarAst f (DataType int 0 ))
(VarAst g (DataType int 0 ))
(VarAst spousedependant (DataType int 0 ))
(VarAst redat1 (DataType int 0 ))
(VarAst redat2 (DataType int 0 ))
(VarAst redat3 (DataType int 0 ))
(VarAst redat4 (DataType int 0 ))
(VarAst redat8 (DataType int 0 ))
(VarAst redat9 (DataType int 0 ))
(ExprStat FuncCall (VarAccAst printf)(ConstAst "Welcome to the United States 1040 federal income tax program.\n"))
(ExprStat FuncCall (VarAccAst printf)(ConstAst "(Note: this isn't the real 1040 form. If you try to submit your\n"))
(ExprStat FuncCall (VarAccAst printf)(ConstAst "taxes this way, you'll get what you deserve!\n\n"))
(ExprStat FuncCall (VarAccAst printf)(ConstAst "Answer the following questions to determine what you owe.\n\n"))
(ExprStat FuncCall (VarAccAst printf)(ConstAst "Total wages, salary, and tips? "))
(AssignStat = (VarAccAst redat1)(ExprAst FuncCall (VarAccAst getinput)))
(AssignStat = (VarAccAst line1)(VarAccAst redat1))
(ExprStat FuncCall (VarAccAst printf)(ConstAst "Taxable interest (such as from bank accounts)? "))
(AssignStat = (VarAccAst redat2)(ExprAst FuncCall (VarAccAst getinput)))
(AssignStat = (VarAccAst line2)(VarAccAst redat2))
(ExprStat FuncCall (VarAccAst printf)(ConstAst "Unemployment compensation, qualified state tuition, and Alaska\n"))
(ExprStat FuncCall (VarAccAst printf)(ConstAst "Permanent Fund dividends? "))
(AssignStat = (VarAccAst redat3)(ExprAst FuncCall (VarAccAst getinput)))
(AssignStat = (VarAccAst line3)(VarAccAst redat3))
(AssignStat = (VarAccAst line4)(ExprAst + (ExprAst + (VarAccAst line1)(VarAccAst line2))(VarAccAst line3)))
(ExprStat FuncCall (VarAccAst printf)(ConstAst "Your adjusted gross income is: "))
(ExprStat FuncCall (VarAccAst printf)(ConstAst "%d\n")(VarAccAst line4))
(ExprStat FuncCall (VarAccAst printf)(ConstAst "Enter <1> if your parents or someone else can claim you on their"))
(ExprStat FuncCall (VarAccAst printf)(ConstAst " return. \nEnter <0> otherwise: "))
(AssignStat = (VarAccAst redat4)(ExprAst FuncCall (VarAccAst getinput)))
(AssignStat = (VarAccAst dependant)(VarAccAst redat4))
(GotoStat L22 (ExprAst == (VarAccAst dependant)(ConstAst 0 )))
(CodeBlock level2 Begin)
(VarAst redat5 (DataType int 0 ))
(AssignStat = (VarAccAst b)(ConstAst 700 ))
(AssignStat = (VarAccAst c)(VarAccAst b))
(GotoStat L24 (ExprAst >= (VarAccAst c)(ExprAst + (VarAccAst line1)(ConstAst 250 ))))
(CodeBlock level3 Begin)
(AssignStat = (VarAccAst c)(ExprAst + (VarAccAst line1)(ConstAst 250 )))
(CodeBlock level3 End)
(LabelStat L24)
(ExprStat FuncCall (VarAccAst printf)(ConstAst "Enter <1> if you are single, <0> if you are married: "))
(AssignStat = (VarAccAst redat5)(ExprAst FuncCall (VarAccAst getinput)))
(AssignStat = (VarAccAst single)(VarAccAst redat5))
(GotoStat L27 (ExprAst == (VarAccAst single)(ConstAst 0 )))
(CodeBlock level3 Begin)
(AssignStat = (VarAccAst d)(ConstAst 7350 ))
(CodeBlock level3 End)
(GotoStat L28)
(LabelStat L27)
(CodeBlock level3 Begin)
(AssignStat = (VarAccAst d)(ConstAst 7350 ))
(CodeBlock level3 End)
(LabelStat L28)
(AssignStat = (VarAccAst e)(VarAccAst c))
(GotoStat L29 (ExprAst <= (VarAccAst e)(VarAccAst d)))
(CodeBlock level3 Begin)
(AssignStat = (VarAccAst e)(VarAccAst d))
(CodeBlock level3 End)
(LabelStat L29)
(AssignStat = (VarAccAst f)(ConstAst 0 ))
(GotoStat L31 (ExprAst != (VarAccAst single)(ConstAst 0 )))
(CodeBlock level3 Begin)
(VarAst redat6 (DataType int 0 ))
(ExprStat FuncCall (VarAccAst printf)(ConstAst "Enter <1> if your spouse can be claimed as a dependant, "))
(ExprStat FuncCall (VarAccAst printf)(ConstAst "enter <0> if not: "))
(AssignStat = (VarAccAst redat6)(ExprAst FuncCall (VarAccAst getinput)))
(AssignStat = (VarAccAst spousedependant)(VarAccAst redat6))
(GotoStat L35 (ExprAst != (VarAccAst spousedependant)(ConstAst 0 )))
(CodeBlock level4 Begin)
(AssignStat = (VarAccAst f)(ConstAst 2800 ))
(CodeBlock level4 End)
(LabelStat L35)
(CodeBlock level3 End)
(LabelStat L31)
(AssignStat = (VarAccAst g)(ExprAst + (VarAccAst e)(VarAccAst f)))
(AssignStat = (VarAccAst line5)(VarAccAst g))
(CodeBlock level2 End)
(LabelStat L22)
(GotoStat L37 (ExprAst != (VarAccAst dependant)(ConstAst 0 )))
(CodeBlock level2 Begin)
(VarAst redat7 (DataType int 0 ))
(ExprStat FuncCall (VarAccAst printf)(ConstAst "Enter <1> if you are single, <0> if you are married: "))
(AssignStat = (VarAccAst redat7)(ExprAst FuncCall (VarAccAst getinput)))
(AssignStat = (VarAccAst single)(VarAccAst redat7))
(GotoStat L39 (ExprAst == (VarAccAst single)(ConstAst 0 )))
(CodeBlock level3 Begin)
(AssignStat = (VarAccAst line5)(ConstAst 12950 ))
(CodeBlock level3 End)
(LabelStat L39)
(GotoStat L41 (ExprAst != (VarAccAst single)(ConstAst 0 )))
(CodeBlock level3 Begin)
(AssignStat = (VarAccAst line5)(ConstAst 7200 ))
(CodeBlock level3 End)
(LabelStat L41)
(CodeBlock level2 End)
(LabelStat L37)
(AssignStat = (VarAccAst line6)(ExprAst - (VarAccAst line4)(VarAccAst line5)))
(GotoStat L43 (ExprAst >= (VarAccAst line6)(ConstAst 0 )))
(CodeBlock level2 Begin)
(AssignStat = (VarAccAst line6)(ConstAst 0 ))
(CodeBlock level2 End)
(LabelStat L43)
(ExprStat FuncCall (VarAccAst printf)(ConstAst "Your taxable income is: "))
(ExprStat FuncCall (VarAccAst printf)(ConstAst "%d\n")(VarAccAst line6))
(ExprStat FuncCall (VarAccAst printf)(ConstAst "Enter the amount of Federal income tax withheld: "))
(AssignStat = (VarAccAst redat8)(ExprAst FuncCall (VarAccAst getinput)))
(AssignStat = (VarAccAst line7)(VarAccAst redat8))
(ExprStat FuncCall (VarAccAst printf)(ConstAst "Enter <1> if you get an earned income credit (EIC); "))
(ExprStat FuncCall (VarAccAst printf)(ConstAst "enter 0 otherwise: "))
(AssignStat = (VarAccAst redat9)(ExprAst FuncCall (VarAccAst getinput)))
(AssignStat = (VarAccAst eic)(VarAccAst redat9))
(AssignStat = (VarAccAst line8)(ConstAst 0 ))
(GotoStat L49 (ExprAst == (VarAccAst eic)(ConstAst 0 )))
(CodeBlock level2 Begin)
(ExprStat FuncCall (VarAccAst printf)(ConstAst "OK, I'll give you a thousand dollars for your credit.\n"))
(AssignStat = (VarAccAst line8)(ConstAst 1000 ))
(CodeBlock level2 End)
(LabelStat L49)
(ExprStat FuncCall (VarAccAst printf)(ConstAst "Your total tax payments amount to: "))
(ExprStat FuncCall (VarAccAst printf)(ConstAst "%d\n")(ExprAst + (VarAccAst line8)(VarAccAst line7)))
(AssignStat = (VarAccAst line10)(ExprAst / (ExprAst + (ExprAst * (VarAccAst line6)(ConstAst 28 ))(ConstAst 50 ))(ConstAst 100 )))
(ExprStat FuncCall (VarAccAst printf)(ConstAst "Your total tax liability is: "))
(ExprStat FuncCall (VarAccAst printf)(ConstAst "%d\n")(VarAccAst line10))
(GotoStat L54 (ExprAst >= (ExprAst - (ExprAst + (VarAccAst line8)(VarAccAst line7))(VarAccAst line10))(ConstAst 0 )))
(CodeBlock level2 Begin)
(AssignStat = (VarAccAst deadline11)(ConstAst 0 ))
(CodeBlock level2 End)
(GotoStat L55)
(LabelStat L54)
(AssignStat = (VarAccAst deadline11)(ConstAst 0 ))
(LabelStat L55)
(GotoStat L56 (ExprAst <= (ExprAst - (ExprAst + (VarAccAst line8)(VarAccAst line7))(VarAccAst line10))(ConstAst 0 )))
(CodeBlock level2 Begin)
(ExprStat FuncCall (VarAccAst printf)(ConstAst "Congratulations, you get a tax refund of $"))
(ExprStat FuncCall (VarAccAst printf)(ConstAst "%d\n")(ExprAst - (ExprAst + (VarAccAst line8)(VarAccAst line7))(VarAccAst line10)))
(CodeBlock level2 End)
(LabelStat L56)
(GotoStat L59 (ExprAst < (ExprAst - (VarAccAst line10)(ExprAst + (VarAccAst line8)(VarAccAst line7)))(ConstAst 0 )))
(CodeBlock level2 Begin)
(ExprStat FuncCall (VarAccAst printf)(ConstAst "Bummer. You owe the IRS a check for $"))
(ExprStat FuncCall (VarAccAst printf)(ConstAst "%d\n")(ExprAst - (VarAccAst line10)(ExprAst + (VarAccAst line8)(VarAccAst line7))))
(CodeBlock level2 End)
(LabelStat L59)
(GotoStat L62 (ExprAst >= (ExprAst - (VarAccAst line10)(ExprAst + (VarAccAst line8)(VarAccAst line7)))(ConstAst 0 )))
(CodeBlock level2 Begin)
(AssignStat = (VarAccAst deadline12)(ConstAst 0 ))
(CodeBlock level2 End)
(GotoStat L63)
(LabelStat L62)
(AssignStat = (VarAccAst deadline12)(ConstAst 0 ))
(LabelStat L63)
(ExprStat FuncCall (VarAccAst printf)(ConstAst "%d\n")(VarAccAst line6))
(ExprStat FuncCall (VarAccAst printf)(ConstAst "%d\n")(ExprAst + (VarAccAst line8)(VarAccAst line7)))
(ExprStat FuncCall (VarAccAst printf)(ConstAst "%d\n")(VarAccAst line10))
(ExprStat FuncCall (VarAccAst printf)(ConstAst "%d\n")(VarAccAst b))
(ExprStat FuncCall (VarAccAst printf)(ConstAst "%d\n")(VarAccAst e))
(ExprStat FuncCall (VarAccAst printf)(ConstAst "%d\n")(VarAccAst d))
(ExprStat FuncCall (VarAccAst printf)(ConstAst "%d\n")(VarAccAst deadline11))
(ExprStat FuncCall (VarAccAst printf)(ConstAst "%d\n")(VarAccAst deadline12))
(AssignStat = (VarAccAst line6)(VarAccAst line10))
(AssignStat = (VarAccAst line8)(ConstAst 0 ))
(AssignStat = (VarAccAst line10)(ConstAst 0 ))
(AssignStat = (VarAccAst deadline11)(ExprAst + (VarAccAst b)(VarAccAst deadline12)))
(AssignStat = (VarAccAst deadline12)(ExprAst + (VarAccAst e)(VarAccAst d)))
(ExprStat FuncCall (VarAccAst printf)(ConstAst "Thank you for using ez-tax.\n"))
(CodeBlock level1 End)
(ReturnStat return (ConstAst 0 ))
(LabelStat L9)
(CodeBlock fbody End)
(FuncAst main End)
(FileAst "tax.adap" End)

